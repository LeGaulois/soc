--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;


CREATE TABLE application (
    id integer NOT NULL,
    nom character varying(50),
    description character varying(65536),
    criticite character varying(10),
    nb_utilisateurs integer,
    type character varying(50),
    technologies character varying(250)
);



CREATE TABLE application_hote (
    ip inet NOT NULL,
    id_application integer NOT NULL
);


CREATE SEQUENCE application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE application_id_seq OWNED BY application.id;



CREATE TABLE hotes (
    ip inet NOT NULL,
    mac macaddr,
    hostname character varying(50),
    famille_os character varying(20),
    os character varying(60),
    type_machine character varying(20),
    localisation character varying(20),
    environnement character varying(20),
    vulnerabilite character varying(10),
    nb_services integer,
    nb_vulnerabilites integer,
    commentaires character varying(250)
);



CREATE TABLE refs (
    nom character varying(20),
    id integer NOT NULL,
    cvss_score numeric,
    confidentialite character varying(15),
    integrite character varying(15),
    disponibilite character varying(15),
    complexite character varying(15),
    authentification character varying(15),
    type character varying(50),
    acces_obtention character varying(15)
);


CREATE SEQUENCE refs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE refs_id_seq OWNED BY refs.id;



CREATE TABLE scan_hote (
    ip inet NOT NULL,
    id_scan integer NOT NULL
);



CREATE TABLE scan_manuel_hote (
    ip_hote inet NOT NULL,
    id_scan_manuel integer NOT NULL
);



CREATE TABLE scan_manuel_status (
    id_scans_status integer NOT NULL,
    id_scan_manuel integer NOT NULL
);



CREATE TABLE scan_plannifie_application (
    id_application integer NOT NULL,
    id_scan_plannifie integer NOT NULL
);



CREATE TABLE scan_plannifie_hote (
    id_scan_plannifie integer NOT NULL,
    ip_hote inet NOT NULL
);


CREATE TABLE scan_plannifie_status (
    id_scans_status integer NOT NULL,
    id_scan_plannifie integer NOT NULL
);


CREATE TABLE scans_status (
    date_fin timestamp with time zone,
    etat character varying(20),
    type character varying(15),
    id integer NOT NULL,
    date_lancement timestamp with time zone DEFAULT now()
);


CREATE SEQUENCE scans_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE scans_id_seq OWNED BY scans_status.id;



CREATE TABLE scans_manuels (
    id integer NOT NULL,
    nmap boolean,
    nmap_options character varying(50),
    nessus boolean,
    nessus_policy_id integer
);


CREATE SEQUENCE scans_manuels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE scans_manuels_id_seq OWNED BY scans_manuels.id;



CREATE TABLE scans_plannifies (
    nom character varying(30),
    description character varying(200),
    nmap boolean,
    nessus boolean,
    nessus_policy_id integer,
    id integer NOT NULL,
    nmap_options character varying(50),
    jours_execution character varying(51)
);


CREATE SEQUENCE scans_plannifies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;



ALTER SEQUENCE scans_plannifies_id_seq OWNED BY scans_plannifies.id;


CREATE TABLE services (
    protocole character varying(4) NOT NULL,
    port integer,
    etat character varying(15),
    nom character varying(50),
    type character varying(20),
    version character varying(50),
    ip_hote inet NOT NULL,
    date_ajout timestamp with time zone NOT NULL,
    date_retrait timestamp with time zone,
    id integer NOT NULL
);


CREATE SEQUENCE services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER SEQUENCE services_id_seq OWNED BY application.id;


CREATE TABLE vuln_hote_service (
    ip_hote inet NOT NULL,
    id_service integer,
    id_vuln integer NOT NULL,
    date_detection timestamp with time zone NOT NULL,
    date_correction timestamp with time zone,
    retour_vuln character varying(65536)
);


CREATE TABLE vulnerabilitees (
    plugin_id integer,
    criticite character varying(10),
    nom character varying(255),
    description character varying(65536),
    synopsis character varying(255),
    solution character varying(65536),
    infos_complementaires character varying(500),
    id integer NOT NULL
);



CREATE SEQUENCE vulnerabilitees_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE vulnerabilitees_id_seq OWNED BY vulnerabilitees.id;



CREATE TABLE vulns_refs (
    vuln_id integer NOT NULL,
    ref_id integer NOT NULL
);



ALTER TABLE ONLY application ALTER COLUMN id SET DEFAULT nextval('application_id_seq'::regclass);


ALTER TABLE ONLY refs ALTER COLUMN id SET DEFAULT nextval('refs_id_seq'::regclass);


ALTER TABLE ONLY scans_manuels ALTER COLUMN id SET DEFAULT nextval('scans_manuels_id_seq'::regclass);


ALTER TABLE ONLY scans_plannifies ALTER COLUMN id SET DEFAULT nextval('scans_plannifies_id_seq'::regclass);


ALTER TABLE ONLY scans_status ALTER COLUMN id SET DEFAULT nextval('scans_id_seq'::regclass);


ALTER TABLE ONLY services ALTER COLUMN id SET DEFAULT nextval('services_id_seq'::regclass);


ALTER TABLE ONLY vulnerabilitees ALTER COLUMN id SET DEFAULT nextval('vulnerabilitees_id_seq'::regclass);


SELECT pg_catalog.setval('application_id_seq', 1, true);


SELECT pg_catalog.setval('refs_id_seq', 1, true);


SELECT pg_catalog.setval('scans_id_seq', 1, true);


SELECT pg_catalog.setval('scans_manuels_id_seq', 1, true);


SELECT pg_catalog.setval('scans_plannifies_id_seq', 1, true);


SELECT pg_catalog.setval('services_id_seq', 1, true);


SELECT pg_catalog.setval('vulnerabilitees_id_seq', 1, true);


ALTER TABLE ONLY application_hote
    ADD CONSTRAINT application_hote_pkey PRIMARY KEY (ip, id_application);


ALTER TABLE ONLY application
    ADD CONSTRAINT application_pkey PRIMARY KEY (id);


ALTER TABLE ONLY hotes
    ADD CONSTRAINT hotes_mac_key UNIQUE (mac);


ALTER TABLE ONLY hotes
    ADD CONSTRAINT hotes_pkey PRIMARY KEY (ip);


ALTER TABLE ONLY refs
    ADD CONSTRAINT refs_pkey PRIMARY KEY (id);


ALTER TABLE ONLY scan_hote
    ADD CONSTRAINT scan_hote_pkey PRIMARY KEY (ip, id_scan);


ALTER TABLE ONLY scan_manuel_hote
    ADD CONSTRAINT scan_manuel_hote_pkey PRIMARY KEY (ip_hote, id_scan_manuel);


ALTER TABLE ONLY scan_manuel_status
    ADD CONSTRAINT scan_manuel_status_pkey PRIMARY KEY (id_scans_status, id_scan_manuel);


ALTER TABLE ONLY scan_plannifie_application
    ADD CONSTRAINT scan_plannifie_application_pkey PRIMARY KEY (id_application, id_scan_plannifie);


ALTER TABLE ONLY scan_plannifie_hote
    ADD CONSTRAINT scan_plannifie_hote_pkey PRIMARY KEY (id_scan_plannifie, ip_hote);


ALTER TABLE ONLY scan_plannifie_status
    ADD CONSTRAINT scan_plannifie_status_pkey PRIMARY KEY (id_scans_status, id_scan_plannifie);


ALTER TABLE ONLY scans_manuels
    ADD CONSTRAINT scans_manuels_pkey PRIMARY KEY (id);


ALTER TABLE ONLY scans_status
    ADD CONSTRAINT scans_pkey PRIMARY KEY (id);


ALTER TABLE ONLY scans_plannifies
    ADD CONSTRAINT scans_plannifies_pkey PRIMARY KEY (id);


ALTER TABLE ONLY services
    ADD CONSTRAINT services_pkey PRIMARY KEY (id);


ALTER TABLE ONLY vulnerabilitees
    ADD CONSTRAINT vulnerabilitees_pkey PRIMARY KEY (id);


ALTER TABLE ONLY vulns_refs
    ADD CONSTRAINT vulns_refs_pkey PRIMARY KEY (vuln_id, ref_id);


ALTER TABLE ONLY application_hote
    ADD CONSTRAINT application_hote_id_application_fkey FOREIGN KEY (id_application) REFERENCES application(id) ON DELETE CASCADE;


ALTER TABLE ONLY application_hote
    ADD CONSTRAINT application_hote_ip_fkey FOREIGN KEY (ip) REFERENCES hotes(ip) ON DELETE CASCADE;


ALTER TABLE ONLY scan_hote
    ADD CONSTRAINT scan_hote_id_scan_fkey FOREIGN KEY (id_scan) REFERENCES scans_status(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_hote
    ADD CONSTRAINT scan_hote_ip_fkey FOREIGN KEY (ip) REFERENCES hotes(ip) ON DELETE CASCADE;


ALTER TABLE ONLY scan_manuel_hote
    ADD CONSTRAINT scan_manuel_hote_id_scan_manuel_fkey FOREIGN KEY (id_scan_manuel) REFERENCES scans_manuels(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_manuel_hote
    ADD CONSTRAINT scan_manuel_hote_ip_hote_fkey FOREIGN KEY (ip_hote) REFERENCES hotes(ip) ON DELETE CASCADE;


ALTER TABLE ONLY scan_manuel_status
    ADD CONSTRAINT scan_manuel_status_id_scan_manuel_fkey FOREIGN KEY (id_scan_manuel) REFERENCES scans_manuels(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_manuel_status
    ADD CONSTRAINT scan_manuel_status_id_scans_status_fkey FOREIGN KEY (id_scans_status) REFERENCES scans_status(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_plannifie_application
    ADD CONSTRAINT scan_plannifie_application_id_application_fkey FOREIGN KEY (id_application) REFERENCES application(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_plannifie_application
    ADD CONSTRAINT scan_plannifie_application_id_scan_plannifie_fkey FOREIGN KEY (id_scan_plannifie) REFERENCES scans_plannifies(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_plannifie_hote
    ADD CONSTRAINT scan_plannifie_hote_id_scan_plannifie_fkey FOREIGN KEY (id_scan_plannifie) REFERENCES scans_plannifies(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_plannifie_hote
    ADD CONSTRAINT scan_plannifie_hote_ip_hote_fkey FOREIGN KEY (ip_hote) REFERENCES hotes(ip) ON DELETE CASCADE;


ALTER TABLE ONLY scan_plannifie_status
    ADD CONSTRAINT scan_plannifie_status_id_scan_plannifie_fkey FOREIGN KEY (id_scan_plannifie) REFERENCES scans_plannifies(id) ON DELETE CASCADE;


ALTER TABLE ONLY scan_plannifie_status
    ADD CONSTRAINT scan_plannifie_status_id_scans_status_fkey FOREIGN KEY (id_scans_status) REFERENCES scans_status(id) ON DELETE CASCADE;


ALTER TABLE ONLY services
    ADD CONSTRAINT services_ip_hote_fkey FOREIGN KEY (ip_hote) REFERENCES hotes(ip) ON DELETE CASCADE;


ALTER TABLE ONLY vuln_hote_service
    ADD CONSTRAINT vuln_hote_service_id_service_fkey FOREIGN KEY (id_service) REFERENCES services(id) ON DELETE CASCADE;


ALTER TABLE ONLY vuln_hote_service
    ADD CONSTRAINT vuln_hote_service_id_vuln_fkey FOREIGN KEY (id_vuln) REFERENCES vulnerabilitees(id) ON DELETE CASCADE;


ALTER TABLE ONLY vuln_hote_service
    ADD CONSTRAINT vuln_hote_service_ip_hote_fkey FOREIGN KEY (ip_hote) REFERENCES hotes(ip) ON DELETE CASCADE;


ALTER TABLE ONLY vulns_refs
    ADD CONSTRAINT vulns_refs_ref_id_fkey FOREIGN KEY (ref_id) REFERENCES refs(id) ON DELETE CASCADE;


ALTER TABLE ONLY vulns_refs
    ADD CONSTRAINT vulns_refs_vuln_id_fkey FOREIGN KEY (vuln_id) REFERENCES vulnerabilitees(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

